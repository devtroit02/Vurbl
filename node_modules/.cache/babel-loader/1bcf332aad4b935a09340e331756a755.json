{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\numan\\\\Desktop\\\\NumaniiJan1\\\\Coding\\\\VurbL\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\numan\\\\Desktop\\\\NumaniiJan1\\\\Coding\\\\VurbL\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\numan\\\\Desktop\\\\NumaniiJan1\\\\Coding\\\\VurbL\\\\src\\\\components\\\\pages\\\\Prompt01.js\";\nimport db from './firebase';\nimport { Link } from 'react-router-dom';\nimport { getDatabase, ref, set } from \"firebase/database\";\nimport { doc, setDoc } from \"firebase/firestore\"; // Add a new document in collection \"cities\"\n\nimport \"../App.css\";\nimport React, { useState, useEffect } from 'react';\nimport { collection, addDoc, getDocs } from \"firebase/firestore\";\n\nconst Todo = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        todo = _useState2[0],\n        setTodo = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        todos = _useState4[0],\n        setTodos = _useState4[1];\n\n  const addTodo = async e => {\n    e.preventDefault();\n\n    try {\n      const docRef = await addDoc(collection(db, \"todos\"), {\n        todo: todo\n      });\n      console.log(\"Document written with ID: \", docRef.id);\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  };\n\n  const fetchPost = async () => {\n    await getDocs(collection(db, \"todos\")).then(querySnapshot => {\n      const newData = querySnapshot.docs.map(doc => _objectSpread({}, doc.data(), {\n        id: doc.id\n      }));\n      setTodos(newData);\n      console.log(todos, newData);\n    });\n  };\n\n  useEffect(() => {\n    fetchPost();\n  }, []);\n  return React.createElement(\"section\", {\n    className: \"todo-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Todo-App\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"What do you have to do today?\",\n    onChange: e => setTodo(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"btn-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    onClick: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(\"div\", {\n    className: \"todo-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, todos.map((todo, i) => React.createElement(\"p\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, todo.todo)))));\n};\n\nexport default Todo;","map":{"version":3,"sources":["C:\\Users\\numan\\Desktop\\NumaniiJan1\\Coding\\VurbL\\src\\components\\pages\\Prompt01.js"],"names":["db","Link","getDatabase","ref","set","doc","setDoc","React","useState","useEffect","collection","addDoc","getDocs","Todo","todo","setTodo","todos","setTodos","addTodo","e","preventDefault","docRef","console","log","id","error","fetchPost","then","querySnapshot","newData","docs","map","data","target","value","i"],"mappings":"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","sourcesContent":["\r\nimport db from './firebase';\r\nimport { Link } from 'react-router-dom'\r\nimport { getDatabase, ref, set,  } from \"firebase/database\";\r\nimport { doc, setDoc } from \"firebase/firestore\"; \r\n\r\n// Add a new document in collection \"cities\"\r\n\r\nimport \"../App.css\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport { collection, addDoc, getDocs } from \"firebase/firestore\";\r\n \r\n \r\nconst Todo = () => {\r\n    const [todo, setTodo] = useState(\"\");\r\n    const [todos, setTodos] = useState([]);\r\n \r\n    const addTodo = async (e) => {\r\n        e.preventDefault();  \r\n       \r\n        try {\r\n            const docRef = await addDoc(collection(db, \"todos\"), {\r\n              todo: todo,    \r\n            });\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n          } catch (e) {\r\n            console.error(\"Error adding document: \", e);\r\n          }\r\n    }\r\n \r\n    const fetchPost = async () => {\r\n       \r\n        await getDocs(collection(db, \"todos\"))\r\n            .then((querySnapshot)=>{              \r\n                const newData = querySnapshot.docs\r\n                    .map((doc) => ({...doc.data(), id:doc.id }));\r\n                setTodos(newData);                \r\n                console.log(todos, newData);\r\n            })\r\n       \r\n    }\r\n   \r\n    useEffect(()=>{\r\n        fetchPost();\r\n    }, [])\r\n \r\n \r\n    return (\r\n        <section className=\"todo-container\">\r\n            <div className=\"todo\">\r\n                <h1 className=\"header\">\r\n                    Todo-App\r\n                </h1>\r\n   \r\n                <div>\r\n   \r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"What do you have to do today?\"\r\n                            onChange={(e)=>setTodo(e.target.value)}\r\n                        />\r\n                    </div>\r\n   \r\n                    <div className=\"btn-container\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn\"\r\n                            onClick={addTodo}\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n   \r\n                </div>\r\n   \r\n                <div className=\"todo-content\">\r\n                    {\r\n                        todos.map((todo,i)=>(\r\n                            <p key={i}>\r\n                                {todo.todo}\r\n                            </p>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n \r\nexport default Todo;"]},"metadata":{},"sourceType":"module"}